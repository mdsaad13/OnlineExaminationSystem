@model OnlineExaminationSystem.Models.ExamBundle
@{
    ViewBag.Title = Model.Exam.Title;
    ViewBag.ExamsActive = "active";
}

<div class="page-header">
    <h3 class="page-title">
        <span class="page-title-icon bg-gradient-primary mr-2 text-white">
            <i class="mdi mdi-pen"></i>
        </span> View Exam - @ViewBag.Title
    </h3>
    <nav aria-label="breadcrumb" role="navigation">
        <ol class="breadcrumb bg-dark">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Exams")">All Exams</a></li>
            <li class="breadcrumb-item active" aria-current="page">View Exam</li>
        </ol>
    </nav>
</div>

<div class="row">
    <div class="col-12 grid-margin">
        <div class="card card-outline-primary">
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-6">
                        <h2>
                            @Model.Exam.Title
                            @if (Model.Exam.Status == 0)
                            {
                                <span class="badge badge-danger">Disabled</span>
                            }
                            else
                            {
                                <span class="badge badge-success">Active</span>
                            }
                        </h2>
                    </div>
                    <div class="col-6">
                        <div class="float-right">
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <a href="@Url.Action("AddQuestion", "Admin", new { ID = Model.Exam.ID })" class="btn btn-primary">
                                    Add Question
                                </a>
                                <a href="@Url.Action("EditExam", new { id = Model.Exam.ID })" class="btn btn-info">
                                    Edit Exam
                                </a>
                                @if (Model.Exam.Status == 0)
                                {
                                    <button type="button" class="btn btn-success" onclick="EnableDisableExam('@Model.Exam.ID', 1)">
                                        Enable Exam
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-danger" onclick="EnableDisableExam('@Model.Exam.ID', 0)">
                                        Disable Exam
                                    </button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <tr>
                            <th>
                                Description
                            </th>
                            <td>
                                @Model.Exam.Description
                            </td>
                            <th>
                                Added Date
                            </th>
                            <td>
                                @Model.Exam.DateTime.ToLongDateString() &nbsp;@Model.Exam.DateTime.ToLongTimeString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Subject
                            </th>
                            <td>
                                @Model.Exam.SubjectName
                            </td>
                            <th>
                                Passing Marks
                            </th>
                            <td>
                                @Model.Exam.PassingMarks
                            </td>
                        </tr>
                        <tr>
                            <th colspan="4">
                                Rules and regulation (OR) Terms and conditions
                                <button type="button" class="btn btn-sm btn-gradient-dark" id="ViewHideData">View/Hide</button>
                            </th>
                        </tr>
                        <tr style="display:none" id="Rules">
                            <td colspan="4" class="text-break">
                                @Html.Raw(Model.Exam.Rules)
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="accordion" id="accordion" role="tablist">
            @{
                int i = 1;
                foreach (var item in Model.AllQuestion)
                {
                    <div class="card">
                        <div class="card-header" role="tab" id="heading-@i">
                            <h6 class="mb-0">
                                <a data-toggle="collapse" href="#collapse-@i" aria-expanded="false" aria-controls="collapse-@i" class="collapsed"> Question #@i </a>
                            </h6>
                        </div>
                        <div id="collapse-@i" class="collapse" role="tabpanel" aria-labelledby="heading-@i" data-parent="#accordion" style="">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <div class="row">
                                            <div class="col-8">
                                                <h5>
                                                    Question
                                                </h5>
                                                <h4>
                                                    @item.Title
                                                </h4>
                                            </div>
                                            <div class="col-4">
                                                <a class="btn btn-sm btn-outline-info float-right mr-2" href="@Url.Action("UpdateQuestion", "Admin", new { id = item.ID , ExamID = Model.Exam.ID })">Edit</a>
                                                <button type="button" class="btn btn-sm btn-outline-danger float-right mr-2" onclick="DeleteQuestion('@item.ID', '@Model.Exam.ID')">Delete Question</button>
                                            </div>
                                        </div>
                                        <hr />
                                    </div>
                                    <div class="col-6 mb-3">
                                        <h5>Option 1</h5>
                                        @item.Option1
                                    </div>
                                    <div class="col-6 mb-3">
                                        <h5>Option 2</h5>
                                        @item.Option2
                                    </div>
                                    <div class="col-6 mb-3">
                                        <h5>Option 3</h5>
                                        @item.Option3
                                    </div>
                                    <div class="col-6 mb-3">
                                        <h5>Option 4</h5>
                                        @item.Option4
                                    </div>
                                    <div class="col-12"><hr /></div>
                                    <div class="col-6">
                                        <h5>Answer: Option @item.Answer</h5>
                                    </div>
                                    <div class="col-6">
                                        <h5>Marks: @item.Marks</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    i++;
                }
            }

        </div>
    </div>


</div>


@section css{
    <link rel="stylesheet" type="text/css" href="~/Plugins/summernote/summernote-bs4.css" />
}
@section scripts{
    <script type="text/javascript" src="~/Plugins/summernote/summernote-bs4.min.js"></script>
    <script>
        // Initializing summernote
        $('.summernote').summernote({
            tabsize: 2,
            height: 'auto'
        });

        $(document).ready(function () {
            $("#ViewHideData").click(function () {
                $('#Rules').fadeToggle();
            });
        });

        function DeleteQuestion(ID, ExamID) {
            if (confirm('Are you sure you want to delete this question?')) {
                window.location.replace("/Admin/DeleteQuestion/" + ID + '?ExamID=' + ExamID);
            }
            return false;
        }

        function EnableDisableExam(ID, Status) {
            if (confirm('Are you sure you want change exam status?')) {
                window.location.replace("/Admin/EnableDisableExam/" + ID + '?Status=' + Status);
            }
            return false;
        }
    </script>

    @{
        int Notification = 0;
        try
        {
            /*
             * try block to check if Session["Notification"] exist
             * if exist then convert  string to int
             */
            Notification = Convert.ToInt32(Session["Notification"]);
        }
        catch
        { }

        if (Notification == 1)
        {
            <script>
                successToast('Question added successfully!');
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 2)
        {
            <script>
                errorToast();
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 3)
        {
            <script>
                successToast('Question updated successfully!');
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 4)
        {
            <script>
                errorToast();
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 5)
        {
            <script>
                successToast('Exam updated successfully!');
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 6)
        {
            <script>
                errorToast();
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 7)
        {
            <script>
                successToast('Question deleted successfully!');
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 8)
        {
            <script>
                successToast('Exam status updated successfully!');
            </script>
            Session["Notification"] = null;
        }
        else if (Notification == 9)
        {
            <script>
                errorToast();
            </script>
            Session["Notification"] = null;
        }
    }
}